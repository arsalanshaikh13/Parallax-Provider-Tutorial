# docker image to use for all jobs
image: node:18-alpine

# set workflow rules for all the stages, exit the workflow if rules don't match
.default-rules: &default-rules
  rules:
    # run pipeline on branch push, tag push and only through api source
    # and avoid double pipeline trigger one through api source and other through gitlab username source
    - if:
        '($CI_COMMIT_BRANCH == "gitlabci" || $CI_COMMIT_TAG) &&
        $CI_PIPELINE_SOURCE == "api"'
      # check for changes in the file extension to run the pipeline
      changes:
        - '**.js'
        - '**.json'
        - '**.*rc'
        - '**.yml'
      when: on_success
    - when: never # do not run pipeline on any other condition

default:
  # global cache for node_modules directory
  # cache key is based on yarn.lock file.
  # this ensures cache is only recreated if a dependency is added,updated, or removed
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/

  # run yarn install automatically at start of every job,
  # the cache will make this process nearly instantaneous after the first run
  before_script:
    # - corepack disable # prevent auto Yarn v4 activation
    # npm install is not need since installed yarn version in node:18-alpine is 1.22.22
    # - npm install -g yarn@1.22.22
    - yarn install

stages:
  - test
  - build
  - release

lint_and_test:
  stage: test
  rules:
    # run pipeline on branch push, tag push and only through api source
    # and avoid double pipeline trigger one through api source and other through gitlab username source
    - if:
        '($CI_COMMIT_BRANCH == "gitlabci" || $CI_COMMIT_TAG) &&
        $CI_PIPELINE_SOURCE == "api"'
      # check for changes in the file extension to run the pipeline
      changes:
        - '**.js'
        - '**.json'
        - '**.*rc'
        - '**.yml'
      when: on_success
    - when: never # do not run pipeline on any other condition
  script:
    - yarn lint
    - yarn test

build:
  stage: build
  rules:
    # run pipeline on branch push, tag push and only through api source
    # and avoid double pipeline trigger one through api source and other through gitlab username source
    - if:
        '($CI_COMMIT_BRANCH == "gitlabci" || $CI_COMMIT_TAG) &&
        $CI_PIPELINE_SOURCE == "api"'
      # check for changes in the file extension to run the pipeline
      changes:
        - '**.js'
        - '**.json'
        - '**.*rc'
        - '**.yml'
      when: on_success
    - when: never # do not run pipeline on any other condition
  script:
    - yarn build
  needs:
    - lint_and_test

  # save the build artifacts ('dist' folder) so they can pass to the publish stage
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

release:
  stage: release
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
    - echo "Publishing version -> $(node -p
      "require('./package.json').version")" # print package version before publishing
    - npm publish
    # since publish needs build stage to happen anyway so no need to put the anchor here
    # it will only run if build successfully happens
  needs:
    - build
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]-gitlabci\.[0-9]+$/'
      when: on_success
